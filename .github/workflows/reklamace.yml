name: Reklamace ‚Äì p≈ôesun hotov√Ωch + maz√°n√≠ fotek

on:
  push:
    branches: [ main ]
    paths:
      - "data/orders.json"
      - "data/hotove.json"
      - "uploads/**"

permissions:
  contents: write

jobs:
  move-and-clean:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq

    - name: Ensure data files exist
      run: |
        mkdir -p data uploads
        [ -f data/orders.json ] || echo "[]" > data/orders.json
        [ -f data/hotove.json ] || echo "[]" > data/hotove.json

    - name: Find solved claims in orders.json
      id: find
      run: |
        # Seznam ID (pole .cislo) v≈°ech z√°znam≈Ø oznaƒçen√Ωch jako vy≈ôe≈°en√©/ hotov√©
        # Detekujeme v√≠ce variant pol√≠ a hodnot (case-insensitive).
        MOVES=$(jq -r '
          .[] 
          | select(
              ( ((.vyreseno // .Vy≈ôe≈°eno // .Vyreseno // "") | ascii_downcase) == "ano" )
              or
              ( ((.stav // .Stav // "") | ascii_downcase | gsub("√≠";"i")) | test("hotovo|vyrizeno") )
            )
          | .cislo
        ' data/orders.json)

        echo "IDs to move:"
        echo "$MOVES"
        echo "ids=$MOVES" >> $GITHUB_OUTPUT

    - name: Move solved claims to hotove.json and delete uploads
      if: steps.find.outputs.ids != ''
      run: |
        set -e
        for ID in ${{ steps.find.outputs.ids }}; do
          echo "‚Üí Zpracov√°v√°m reklamaci: $ID"

          # 1) P≈ôidej dan√Ω rekord do hotove.json
          #    (v p≈ô√≠padƒõ, ≈æe by tam ID n√°hodou ji≈æ bylo, p≈ôeskakujeme duplicitn√≠ append)
          jq --arg id "$ID" -c '.[] | select(.cislo == $id)' data/orders.json > /tmp/_recs.json
          if [ ! -s /tmp/_recs.json ]; then
            echo "   ‚ö†Ô∏è Z√°znam s cislo=$ID v orders.json nenalezen, p≈ôeskoƒçeno."
            continue
          fi
          # P≈ôidej v≈°echny nalezen√© z√°znamy (typicky jeden) do hotove.json
          jq --slurpfile recs /tmp/_recs.json '. + $recs' data/hotove.json > /tmp/hotove_new.json
          mv /tmp/hotove_new.json data/hotove.json

          # 2) Odeber dan√Ω rekord z orders.json
          jq --arg id "$ID" '[ .[] | select(.cislo != $id) ]' data/orders.json > /tmp/orders_new.json
          mv /tmp/orders_new.json data/orders.json

          # 3) Sma≈æ fotky v uploads/<cislo>/
          if [ -d "uploads/$ID" ]; then
            echo "   üóëÔ∏è Ma≈æu fotky v uploads/$ID"
            rm -rf "uploads/$ID"
          else
            echo "   ‚ÑπÔ∏è Slo≈æka uploads/$ID neexistuje, nen√≠ co mazat."
          fi
        done

    - name: Commit & push if changed
      run: |
        git config user.name "WGS Bot"
        git config user.email "bot@whiteglove.cz"
        git add -A
        if git diff --staged --quiet; then
          echo "≈Ω√°dn√© zmƒõny k ulo≈æen√≠."
        else
          git commit -m "Automatick√Ω p≈ôesun hotov√Ωch reklamac√≠ + maz√°n√≠ fotek"
          git push
        fi
